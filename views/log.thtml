<%
import os.path as osp
from urllib.parse import urlparse
%>
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Logs</title>
    <style>
      td,
      th {
        border-left: 1px solid black;
        border-right: 1px solid black;
        padding: 0.1rem 0.5rem;
      }

      th {
        position: sticky;
        top: 0;
        background:#99badd;
      }

      td:nth-child(1) {
        max-width: 50vw;
      }
      td:nth-child(4),th:nth-child(4) {
        max-width: 40vw;
        overflow-wrap: anywhere;
      }
			tr:nth-child(even) { background: #eee; }

      table {
        border-collapse: collapse;
        position: relative;
      }
      details {
        display: inline-block;
      }
      abbr {
        text-decoration:blue;
      }
      div#controls {
        position:fixed;
        top:0;
        left: 0;
        background-color:white;
        padding:0.5em;
      }
      select {
        max-width: 30vw;
      }
    </style>
    <script>
      window.addEventListener("load", () => {
        // scroll to the bottom on page load
        function scrollToBottom() {
          setTimeout(() => window.scrollTo(0, document.body.scrollHeight), 100);
        }

        async function fetchTable() {
          console.log("fetchTable");
          const form = new FormData(document.querySelector("form"));
          const queryParameters = new URLSearchParams(form).toString();
          const resp = await fetch(`/log?${queryParameters}`);
          const html = await resp.text();
          const parser = new DOMParser();
          const doc = parser.parseFromString(html, "text/html");
          const table = document.querySelector("table");
          table.parentNode.replaceChild(doc.querySelector("table"), table);
          console.log("ends");
        }

        document.body.addEventListener("keydown", (ev) => {
          switch (ev.key) {
            case "End":
              console.log("End");
              ev.preventDefault();
              fetchTable().then(scrollToBottom());
              break;
            case "PageDown":
              console.log("PageDown");
              const body = document.body;
              console.log(window.scrollY, body.clientHeight);
              if (window.innerHeight + window.scrollY >= document.body.scrollHeight) {
                fetchTable();
              }
              break;
          }
        });

        document.body.addEventListener("keyup", (ev) => {
          switch (ev.key) {
            case "End":
              console.log("End up");
              ev.preventDefault();
              break;
          }
        });

        document.body.querySelector("form").addEventListener("change", fetchTable);
      });
    </script>
  </head>
  <body>
      <form action="/log" method="GET">
    <table>
      <thead>
        <tr>
          <th>Message</th>
          <th>Time
            <select name="day">
              <% for day in ['All'] + days: %>
              <option value="{{day}}" {{ day == query.day and 'selected' or ""}}>
                {{day}}
              </option>
              <% end %>
            </select>
          </th>
          <th>IP
            <select name="ip">
              <% for ip in ['All'] + ips: %>
              <option value="{{ip}}" {{ ip == query.ip and 'selected' or ''}}>
                {{ip}}
              </option>
              <% end %>
            </select>
          </th>
          <th>Referrer
            <select name="ref">
              <% for ref in ['All'] + refs: %>
              <option value="{{ref}}" {{ ref == query.ref and 'selected' or ""}}>
                {{ref}}
              </option>
              <% end %>
            </select>
          </th>
        </tr>
      </thead>
      <tbody>
        <% cd = pr = None %>
        <% for row in records: %>
        <tr>
          <td>
            {{!format(row['message'])}}
          </td>
          <% if cd == row["time"].date(): %>
            <td>{{ row["time"].strftime(" %H:%M:%S") }}</td>
          <% else: %>
            <% cd = row["time"].date() %>
            <td style="font-weight: bold">{{ row["time"].strftime("%y/%m/%d %H:%M:%S") }}</td>
          <% end %>
          <td>{{ row["ip"] }}</td>
          <%
             ref = row["ref"]
             if pr == ref:
                ref = f'<abbr title="{ref}">&hellip;</abbr>'
             else:
               prefix = pr and osp.commonpath([pr, row["ref"]]) or ""
               if len(prefix):
                ref = f'<abbr title="{prefix}">&hellip;</abbr>{ref[len(prefix)+1:]}'
               end
             end
             pr = row["ref"]
          %>
          <td>{{! ref }}</td>
        </tr>
        <% end %>
      </tbody>
    </table>
      </form>
  </body>
</html>
